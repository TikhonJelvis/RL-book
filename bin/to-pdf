#!/usr/bin/env bash

book=0

if [[ -z "$DEJA_VU_DIRECTORY" ]]
then
    echo "DEJA_VU_DIRECTORY variable not set."
    echo "Try restarting your Nix shell."
    exit 1
fi

if [[ $# -eq 0 ]]
then
    book=1
fi

if [[ $TF_FORMAT == 1 ]]
then
    echo "Using T&F format."
fi

run_pandoc() {
    out=$1
    format=$2
    chapters="${@:3}"

    cd book
    pandoc --to "$format" \
             --output "$out" \
             --metadata chapters \
             --metadata title='Foundations of Reinforcement Learning with Applications in Finance' \
             --metadata author='Ashwin Rao, Tikhon Jelvis' \
             --metadata reference-section-title='Bibliography' \
             --metadata biblatex \
             --metadata biblio-style='apa' \
             --metadata biblatexoptions='backend=biber' \
             --filter pandoc-crossref \
             --pdf-engine xelatex \
             --template ../templates/latex.template \
             --top-level-division part \
             $( (( book == 1 )) && printf %s '--toc' ) \
             $(tf-format --metadata tf-format) \
             --lua-filter ../bin/alon-style-quotes.lua \
             --citeproc \
             --bibliography bibliography.bib \
             $(tf-format --lua-filter ../bin/remove-hyperref.lua) \
             $chapters

    cd ..
}

tf-format() {
    if [[ $TF_FORMAT == 1 ]]; then echo -n "${@}"; fi
}


format="pdf"
if [[ $TO_TEX == 1 ]]; then format="latex"; fi

extension="$format"
if [ "$format" = "latex" ]; then extension="tex"; fi


if [[ $book == 1 ]]
then
    out="$(pwd)/book.$extension"

    echo "Building $out from:"
    while read chapter
    do
        echo "book/$chapter/${chapter}.md"
        names+=("$chapter/${chapter}.md")
    done < <(grep -vxE -e '(^#.*$|^\s*$)' structure)
    # Regexp matches blank lines and comments, which we filter out
    # with grep

    run_pandoc "$out" "$format" "${names[@]}"
else
    # Several equivalent options:
    #
    # bin/to-pdf chapter1
    # bin/to-pdf chapter1/chapter1
    # bin/to-pdf chapter1/chapter1.md
    # bin/to-pdf book/chapter1/chapter1.md
    file=$(basename $1)
    name="${file%.*}"
    target="$name/$name.md"
    out="${target%.*}.$extension"

    echo "Converting book/$target to book/$out"
    run_pandoc "$out" "$format" "$target"
fi

